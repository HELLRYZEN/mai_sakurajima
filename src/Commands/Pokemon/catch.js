module.exports = {
    name: "catch",
    aliases: ["catch"],
    exp: 0,
    cool: 4,
    react: "‚úÖ",
    category: "pokemon",
    description: "Catch the spawned Pok√©mon",
    async execute(client, arg, M) {
        try {
            const pokemonData = await client.DB.get(`${M.from}.pokemon`); // Retrieve spawned Pok√©mon data
            if (!pokemonData) {
                return M.reply("üôÖ‚Äç‚ôÇÔ∏è Sorry, there are currently no Pok√©mon available to catch!");
            }

            const { name, level, exp } = pokemonData; // Destructure Pok√©mon data

            // Check if the argument matches the spawned Pok√©mon name
            if (arg.toLowerCase() === name.toLowerCase()) {
                // Proceed to catch the Pok√©mon
                const pc = await client.DB.get(`${M.sender}_PC`) || [];
                pc.push({ name: name, level: level, exp: exp }); // Add Pok√©mon data to PC
                await client.DB.set(`${M.sender}_PC`, pc);

                await M.reply(`üéâ You have successfully caught ${name} (Level: ${level}) and stored it in your PC!`);
                
                // Delete the spawned Pok√©mon data from the database
                await client.DB.delete(`${M.from}.pokemon`);
            } else {
                // If the argument does not match the spawned Pok√©mon name
                await M.reply("‚ùå The Pok√©mon you tried to catch does not match the spawned Pok√©mon!");
            }
        } catch (err) {
            console.error(err);
            await client.sendMessage(M.from, {
                text: "An error occurred while catching the Pok√©mon."
            });
        }
    },
};
